{"version":3,"sources":["app/LocationContext.js","app/stations/direction/DirectionArrow.js","app/stations/Stations.js","app/App.js","index.js"],"names":["LocationContext","createContext","latitude","longitude","DirectionArrow","props","_useState","useState","_useState2","Object","slicedToArray","compass","setCompass","compassEnabled","useContext","CompassContext","location","compassHandler","e","compassValue","webkitCompassHeading","Math","abs","alpha","console","log","navigator","userAgent","match","window","addEventListener","style","transform","computeDirectionAngle","destinationLocation","height","react_default","a","createElement","src","className","currentLocation","northAngle","X","cos","sin","Y","atan2","PI","Stations","_this","classCallCheck","this","_super","call","state","stations","stationName","_step","_iterator","createForOfIteratorHelper","s","n","done","value","err","f","response","_step2","stationsCopy","slice","_iterator2","element","length","isStationInList","push","name","id","types","setState","_this2","undefined","context","params","URLSearchParams","key","process","rankby","type","fetch","concat","method","headers","Content-Type","then","json","data","updateStationsFromResponse","reloadStationsList","Stations_StationsList","React","Component","contextType","StationsList","_super2","map","Stations_Station","station","Stack","direction","justifyContent","alignItems","spacing","getStations","Station","_this3","_super3","distance","duration","requestDistanceAPI","includes","firstElement","newState","_this4","destinations","origins","mode","handleDistanceResponse","stationLocation","Paper","variant","elevation","Box","sx","width","fontFamily","fontWeight","fontSize","padding","borderRadius","isTrainStation","isBusStation","DirectionArrow_DirectionArrow","App","setLatitude","_useState3","_useState4","setLongitude","_useState5","_useState6","setCompassEnabled","isIOS","geolocation","getCurrentPosition","position","coords","alert","AppBar","color","Button","onClick","DeviceOrientationEvent","requestPermission","catch","Provider","app_stations_Stations","href","title","require","config","ReactDOM","render","src_app_App","document","getElementById"],"mappings":"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","file":"static/js/main.6f335461.chunk.js","sourcesContent":["import { createContext } from \"react\"\r\n\r\nexport const LocationContext = createContext({latitude: null, longitude: null})","import React, { useContext, useState } from \"react\"\r\nimport { CompassContext } from \"../../App\"\r\nimport \"./DirectionArrow.css\"\r\nimport { LocationContext } from \"../../LocationContext\"\r\n\r\nfunction DirectionArrowIcon(props) {\r\n    return <img src=\"down-arrow.png\" style={{transform: props.transform}}></img>\r\n}\r\n\r\nexport function DirectionArrow(props) {\r\n\r\n    var [compass, setCompass] = useState(null)\r\n    const compassEnabled = useContext(CompassContext)\r\n    const location = useContext(LocationContext)\r\n\r\n    var startCompass = () => {\r\n        // setStarted(true)\r\n        const isIOS = (\r\n            navigator.userAgent.match(/(iPod|iPhone|iPad)/) &&\r\n            navigator.userAgent.match(/AppleWebKit/)\r\n        );\r\n    \r\n        if (isIOS) {\r\n            window.addEventListener(\"deviceorientation\", compassHandler, true);       \r\n        } else {\r\n            window.addEventListener(\"deviceorientationabsolute\", compassHandler, true);\r\n        }\r\n    }\r\n\r\n    var compassHandler = (e) => {\r\n        let compassValue = e.webkitCompassHeading || Math.abs(e.alpha - 360);\r\n        console.log(compassValue)\r\n        setCompass(compassValue)\r\n    }\r\n\r\n    if (compassEnabled) {\r\n        startCompass()\r\n    }\r\n\r\n\r\n    var style = {\r\n        transform: \"translate(-50%, -50%) rotate(-\" + computeDirectionAngle(location, props.destinationLocation, compass) + \"deg)\",\r\n        height: \"2.5em\"\r\n    }\r\n\r\n    return <div>\r\n        {\r\n            compassEnabled &&\r\n            <img src=\"down-arrow.png\" className=\"compass-arrow\" style={style}></img>\r\n        }\r\n        {/* {\r\n            !compassEnabled && \r\n            <img src=\"down-arrow.png\" className=\"compass-arrow\"></img>\r\n        } */}\r\n    </div>\r\n}\r\n\r\nfunction computeDirectionAngle(currentLocation, destinationLocation, northAngle) {\r\n    const X = Math.cos(destinationLocation.latitude) * Math.sin(destinationLocation.longitude - currentLocation.longitude);\r\n    const Y = Math.cos(currentLocation.latitude) * Math.sin(destinationLocation.latitude) - Math.sin(currentLocation.latitude) * Math.cos(destinationLocation.latitude) * Math.cos(destinationLocation.longitude - currentLocation.longitude);\r\n\r\n    const beta = (Math.atan2(X,Y) / Math.PI) * 180\r\n    return northAngle + beta;\r\n}","import { Paper, Stack } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport React, { useContext } from 'react'\r\nimport { LocationContext } from '../LocationContext';\r\nimport { DirectionArrow } from './direction/DirectionArrow';\r\nimport \"./Stations.css\"\r\n\r\nlet googleNearbyAPI = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?\";\r\nconst googleDistanceAPI = \"https://maps.googleapis.com/maps/api/distancematrix/json?\"\r\n\r\nconst MAX_STATION_AMOUNT = 10;\r\n\r\nclass Stations extends React.Component {\r\n\r\n    static contextType = LocationContext;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            stations: []\r\n        }\r\n    }\r\n\r\n    isStationInList(stations, stationName) {\r\n        for (const station of stations) {\r\n            if (station[\"name\"] === stationName)\r\n                return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    updateStationsFromResponse(response) {\r\n        var stationsCopy = this.state.stations.slice()\r\n\r\n        for (const element of response['results']) {\r\n            if (stationsCopy.length >= MAX_STATION_AMOUNT)\r\n                break\r\n\r\n            if (!this.isStationInList(stationsCopy, element[\"name\"])){\r\n                stationsCopy.push(\r\n                    {\r\n                        \"name\": element[\"name\"],\r\n                        \"id\": element[\"place_id\"],\r\n                        \"latitude\": element[\"geometry\"][\"location\"][\"lat\"],\r\n                        \"longitude\": element[\"geometry\"][\"location\"][\"lng\"],\r\n                        \"types\": element[\"types\"],\r\n                    }\r\n                )\r\n            }\r\n        }\r\n\r\n        this.setState({stations: stationsCopy})\r\n    }\r\n\r\n    reloadStationsList() {\r\n        if (this.context == undefined || !this.context.latitude == undefined || !this.context.longitude == undefined) return\r\n\r\n        var params = new URLSearchParams({\r\n            key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n            location: this.context.latitude + \", \" + this.context.longitude,\r\n            rankby: \"distance\",\r\n            type: \"train_station\"\r\n        })\r\n        const apiRequest = googleNearbyAPI + params\r\n\r\n        fetch(\r\n            process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest), \r\n            {\r\n                method: 'GET',\r\n                headers: {'Content-Type':'application/json'},\r\n            }\r\n        )\r\n        .then(response => response.json())\r\n        .then(data => this.updateStationsFromResponse(data))\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reloadStationsList()\r\n    }\r\n\r\n    render() {\r\n        var location = this.context\r\n\r\n        return <div>\r\n                    <div>Current location: {location.latitude} {location.longitude}</div>\r\n                    <StationsList stations={this.state.stations}></StationsList>\r\n                </div>;\r\n    }\r\n}\r\n\r\n\r\nexport default Stations;\r\n\r\nclass StationsList extends React.Component {\r\n    \r\n\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n\r\n    getStations() {\r\n        var location = this.context\r\n\r\n        return this.props.stations.map(element => {\r\n            return <Station \r\n                name={element[\"name\"]} key={element[\"id\"]} \r\n                station={element}>\r\n            </Station>\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return <Stack\r\n            direction=\"column\"\r\n            justifyContent=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={2}>\r\n                {this.getStations()}\r\n            </Stack>;\r\n    }\r\n}\r\n\r\nclass Station extends React.Component {\r\n        static contextType = LocationContext;\r\n\r\n        constructor(props) {\r\n            super(props)\r\n            this.state = {\r\n                distance: \"\",\r\n                duration: \"\",\r\n            }\r\n            this.requestDistanceAPI()\r\n        }\r\n    \r\n        isBusStation() {\r\n            return this.props.station[\"types\"].includes(\"bus_station\")\r\n        }\r\n    \r\n        isTrainStation() {\r\n            return this.props.station[\"types\"].includes(\"train_station\")\r\n        }\r\n    \r\n        handleDistanceResponse(response) {\r\n            if (response[\"rows\"].length === 0 || response[\"rows\"][0][\"elements\"].length === 0) {\r\n                return\r\n            }\r\n    \r\n            var firstElement = response[\"rows\"][0][\"elements\"][0]\r\n    \r\n            var newState = {\r\n                distance: firstElement[\"distance\"][\"text\"],\r\n                duration: firstElement[\"duration\"][\"text\"]\r\n            }\r\n    \r\n            this.setState(newState);\r\n        }\r\n    \r\n        requestDistanceAPI() {\r\n            if (!this.context) return\r\n\r\n            var location = this.context\r\n\r\n            var params = new URLSearchParams({\r\n                key: process.env.REACT_APP_GOOGLE_API_KEY,\r\n                destinations: \"place_id:\" + this.props.station[\"id\"],\r\n                origins: location.latitude + \", \" + location.longitude,\r\n                mode: \"walking\"\r\n            })\r\n            const apiRequest = googleDistanceAPI + params\r\n\r\n            fetch(process.env.REACT_APP_CORS_PROXY_URL.concat(apiRequest))\r\n            .then(response => response.json())\r\n            .then(data => this.handleDistanceResponse(data))\r\n        }\r\n\r\n        componentDidMount() {\r\n            this.requestDistanceAPI()\r\n        }\r\n    \r\n        render() {\r\n            const stationLocation = {\r\n                latitude: this.props.station.latitude,\r\n                longitude: this.props.station.longitude\r\n            }\r\n            return  <Paper variant=\"elevation\" elevation={4}>\r\n                        <Box sx={{width: 350, height: 100, fontFamily: \"Jetbrains Mono, monospace\", fontWeight: 600, fontSize: \"1.2em\", padding: \"10px\", borderRadius: \"10px\"}}>\r\n                            <div className=\"station-box\">\r\n                                <div>\r\n                                    <div>\r\n                                        {\r\n                                            this.isTrainStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/train-public-transport.png\"} />\r\n                                        }\r\n                                        {\r\n                                            this.isBusStation() &&\r\n                                            <img className=\"transport-icon\" src={\"/bus-public-transport.png\"} />\r\n                                        }\r\n                                    </div>\r\n                                    <div>{this.props.name}</div>\r\n                                    <div className=\"station-info\">\r\n                                        <div>{this.state.distance}</div>\r\n                                        <div>{this.state.duration}</div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"direction-arrow-box\">\r\n                                    <DirectionArrow destinationLocation={stationLocation}></DirectionArrow>\r\n                                </div>\r\n                            </div>\r\n                        </Box>\r\n                    </Paper>\r\n        }\r\n    }\r\n\r\n\r\n// function getLocation(setLatitude, setLongitude) {\r\n//     if(navigator.geolocation) {\r\n//         navigator.geolocation.getCurrentPosition(function(position) {\r\n//           setLatitude(position.coords.latitude)\r\n//           setLongitude(position.coords.longitude)\r\n//         })\r\n//     } else {\r\n//         alert(\"Sorry, your browser does not support HTML5 geolocation.\");\r\n//     }\r\n// }\r\n\r\n","import './App.css';\nimport Stations from \"./stations/Stations\"\nimport React, { createContext, useState } from 'react';\nimport { AppBar, Button } from '@mui/material';\nimport { LocationContext } from './LocationContext';\n\nexport const CompassContext = createContext(null) \n\nconst App = () => {\n\n  const [latitude, setLatitude] = useState(null);\n  const [longitude, setLongitude] = useState(null);\n\n  const [compassEnabled, setCompassEnabled] = useState(false);\n\n  const isIOS = (\n    navigator.userAgent.match(/(iPod|iPhone|iPad)/) &&\n    navigator.userAgent.match(/AppleWebKit/)\n  );\n\n  if(navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      setLatitude(position.coords.latitude)\n      setLongitude(position.coords.longitude)\n    })\n  } else {\n    alert(\"Sorry, your browser does not support HTML5 geolocation.\");\n  }\n\n  var requestCompassPermission = () => {\n    DeviceOrientationEvent.requestPermission()\n    .then((response) => {\n      if (response === \"granted\") {\n        setCompassEnabled(true);\n      } else {\n        setCompassEnabled(false);\n        alert(\"Compass has to be allowed!\");\n      }\n    })\n    .catch((e) => {\n      alert(e); //TODO: Remove\n      setCompassEnabled(false)\n    });\n  }\n\n  return (\n    <div>\n      <header>\n        <AppBar className='App-header' position=\"static\" color=\"default\" variant=\"elevation\">\n          <img className='bar-logo' src='/icon.png'></img>\n          <span>City Navigator</span>\n        </AppBar>\n      </header>\n      <main>\n        {\n          isIOS && !compassEnabled &&\n          <Button variant=\"contained\" onClick={requestCompassPermission}>Enable compass</Button>\n        }\n        <LocationContext.Provider value={{latitude: latitude, longitude: longitude}}>\n          <CompassContext.Provider value={compassEnabled}>\n            { latitude != null && longitude != null &&\n              <Stations></Stations>\n            }\n          </CompassContext.Provider>\n        </LocationContext.Provider>\n      </main>\n      <footer><a href=\"https://www.flaticon.com/free-icons/\" title=\"icons\">Icons created by Google - Flaticon</a></footer>\n    </div>\n  );\n}\n  \n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App'\nimport './index.css';\n\nrequire('dotenv').config()\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}